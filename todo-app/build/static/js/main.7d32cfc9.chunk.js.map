{"version":3,"sources":["todo/AuthenticationService.js","todo/LoginComponent.js","todo/LogoutComponent.js","todo/outline-components/HeaderComponent.js","todo/api/todo/HelloWorldService.js","todo/WelcomeComponent.js","todo/ErrorComponent.js","todo/api/todo/TodosService.js","todo/ListTodosComponent.js","todo/outline-components/FooterComponent.js","todo/AuthenticatedRoute.js","todo/AddTodoComponent.js","todo/FormikComponent.js","todo/TodoComponent.js","todo/TodoApp.js","App.js","serviceWorker.js","index.js"],"names":["username","password","sessionStorage","setItem","console","log","removeItem","getItem","user","LoginComponent","props","printCurrentState","event","state","handleChange","setState","target","name","value","loginClicked","AuthenticationService","registerSuccessfulLogin","Object","assign","showSuccessMessage","hasLoginFailed","history","push","className","type","placeholder","this","onChange","onClick","Component","LogoutComponent","logout","to","HeaderComponent","onBurgerButtonClickDisplayMenu","displayBurgerBtnMenu","isUserLoggedIn","id","htmlFor","xmlns","width","height","viewBox","d","fill","fillRule","clipRule","axios","get","message","post","helloWorldRequest","WelcomeComponent","retrieveWelcomeMessage","HelloWorldService","executeHelloWorldService","then","response","handleSuccessfulResponse","welcomeMessage","data","helloWorldResponse","postTestMessage","postNewHelloWorldMessage","getTestRequestWithPathVariableMessage","executeHelloWorldServicePathVariable","returnError","catch","error","welcomeMessageAPI","match","params","ErrorComponent","userName","newTodo","description","done","targetDate","updatedTodo","deleteTodo","ListTodosComponent","refreshTodos","TodosService","getAllTodos","handleAllTodosSuccess","todos","addNewTodoItem","addNewTodo","updateTodoItem","rowData","deleteTodoItem","getLoggedInUserName","todosLocal","title","columns","field","actions","icon","tooltip","FooterComponent","AuthenticatedRoute","path","component","FormikComponent","cancelReturnListTodo","firstName","lastName","email","todoId","parameterSent","initialValues","validationSchema","Yup","max","required","onSubmit","values","setSubmitting","setTimeout","formik","handleSubmit","getFieldProps","touched","errors","TodoComponent","TodoApp","submitLogin","exact","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d32cfc9.chunk.js","sourcesContent":["class AuthenticationService {\r\n\r\n    registerSuccessfulLogin(username,password){\r\n        sessionStorage.setItem('authenticatedUser',username);\r\n    }\r\n\r\n    logout(){\r\n        console.log('logging out....')\r\n        sessionStorage.removeItem('authenticatedUser');\r\n    }\r\n\r\n    isUserLoggedIn(){\r\n        let user = sessionStorage.getItem('authenticatedUser');\r\n\r\n        if(user===null){\r\n            return false;\r\n        }\r\n        else{\r\n            return true;\r\n        }\r\n    }\r\n\r\n    getLoggedInUserName(){\r\n        let user = sessionStorage.getItem('authenticatedUser');\r\n\r\n        if(user===null){\r\n            return '';\r\n        }\r\n        else{\r\n            return user;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default new AuthenticationService()","import React, { Component } from 'react';\r\nimport './todos.css';\r\n\r\nimport AuthenticationService from './AuthenticationService.js';\r\n\r\nclass LoginComponent extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            hasLoginFailed:false,\r\n            showSuccessMessage:false\r\n        }\r\n    }\r\n\r\n    printCurrentState = (event) =>{\r\n        console.log('current state is:',this.state);\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        );\r\n    }\r\n\r\n    loginClicked = (event) =>{\r\n\r\n        if(this.state.username === 'user' && this.state.password ==='123'){\r\n            console.log('login success :)')\r\n\r\n            AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password);\r\n\r\n            Object.assign({},{showSuccessMessage:true,hasLoginFailed:false});\r\n\r\n            //Programmatically activate route:\r\n            this.props.history.push(`/welcome/${this.state.username}`);\r\n        }\r\n        else{\r\n            console.log('login failed :(')\r\n\r\n            Object.assign({},{showSuccessMessage:false,hasLoginFailed:true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        \r\n\r\n        return (\r\n\r\n            <div>\r\n                <h1 className='login-comp-instruction'>Please Enter Your Credentials Below</h1>\r\n\r\n                <div className='login-component'>                    \r\n\r\n                    <label className='login-comp-label'>\r\n                        <input type='text' \r\n                                        name='username' \r\n                                        placeholder=' ' \r\n                                        value={this.state.username} \r\n                                        onChange={this.handleChange}\r\n                                        className='login-credential-field'\r\n                                        />\r\n                        <span className='login-comp-span'>Username</span>\r\n                    </label>\r\n                    \r\n                    <label className='login-comp-label'>\r\n                    <input type='Password' \r\n                                     name='password' \r\n                                     placeholder=' ' \r\n                                     value={this.state.password} \r\n                                     onChange={this.handleChange}\r\n                                     className='login-credential-field'\r\n                                     />\r\n                    <span className='login-comp-span'>Password</span>\r\n                    </label>\r\n                    <button onClick={this.loginClicked} className='login-submit-btn'>Login</button>\r\n                   \r\n                    {/*<button onClick={this.printCurrentState}>Print Current Login State</button>*/}\r\n                </div>\r\n            </div>\r\n\r\n                \r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginComponent;","import React, { Component } from 'react';\r\n\r\nimport './todos.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport AuthenticationService from './AuthenticationService.js';\r\n\r\nclass LogoutComponent extends Component {\r\n\r\n    render() {\r\n\r\n        AuthenticationService.logout();\r\n\r\n        return (\r\n            <>\r\n                <h1>You are logged out</h1>\r\n                <div className=\"logout-container\">\r\n                    <span>\r\n                        Thank You for Using Our Application.\r\n                    </span>\r\n                    <Link className='router-link login-submit-link' to='/login'>Login</Link>                                       \r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default LogoutComponent;\r\n","import React, { Component } from 'react';\r\nimport '../todos.css';\r\nimport {Link} from 'react-router-dom';\r\nimport AuthenticationService from '../AuthenticationService';\r\n\r\n\r\nclass HeaderComponent extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            displayBurgerBtnMenu:'none'\r\n        }\r\n    }\r\n\r\n    onBurgerButtonClickDisplayMenu = () =>{        \r\n\r\n        if(this.state.displayBurgerBtnMenu === 'none'){\r\n            this.setState({displayBurgerBtnMenu:'block'})\r\n        }\r\n        else{\r\n            this.setState({displayBurgerBtnMenu:'none'})\r\n        }        \r\n\r\n        console.log('clicking burger button...',this.state)\r\n    }\r\n\r\n    render() {\r\n\r\n        const isUserLoggedIn=AuthenticationService.isUserLoggedIn();\r\n        console.log('isUserLoggedIn=',isUserLoggedIn)\r\n\r\n        return (\r\n            <div>\r\n\r\n               {/**<nav>\r\n                   <ul className='todo-burger-nav'>\r\n                        <li>\r\n                            <MenuIcon className='todo-burger-btn'></MenuIcon>\r\n                            <button icon='MenuIcon' onClick={this.onBurgerButtonClickDisplayMenu}>display burger menu</button>\r\n                        </li>\r\n                   </ul>                   \r\n               </nav>\r\n               <div style={{display: `${display}`}}>\r\n                   <ul className='todo-burger-menu'>                        \r\n                        <li>                        \r\n                            <Link className='router-link' to='/welcome/user/'>Home</Link>                        \r\n                        </li>\r\n                        <li>                        \r\n                            <Link className='router-link' to='/todos'>To-dos</Link>                            \r\n                        </li>                    \r\n                        \r\n                        <li className='todo-navbar-li-last'>                        \r\n                            <Link className='router-link' to='/logout'>Logout</Link>                            \r\n                        </li>\r\n                    </ul>     \r\n               </div>*/}\r\n               <nav>\r\n                <ul className=\"todo-navbar-hamburger\">\r\n                        <li>\r\n                            <div className=\"hamburger-menu\">\r\n                                <input id=\"menu__toggle\" type=\"checkbox\" />\r\n                                <label className=\"menu__btn\" htmlFor=\"menu__toggle\">\r\n                                <span></span>\r\n                                </label>\r\n\r\n                                <ul className=\"menu__box\">\r\n                                        <li>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\r\n                                                <path d=\"M21 13v10h-6v-6h-6v6h-6v-10h-3l12-12 12 12h-3zm-1-5.907v-5.093h-3v2.093l3 3z\" fill=\"#fff\"/>\r\n                                            </svg><span>     </span>\r\n                                            <Link className='router-link' to='/welcome/user/'>Home</Link>\r\n                                        </li>\r\n                                        <li>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\r\n                                                <path d=\"M22 2v20h-20v-20h20zm2-2h-24v24h24v-24zm-4 7h-8v1h8v-1zm0 5h-8v1h8v-1zm0 5h-8v1h8v-1zm-10.516-11.304l-.71-.696-2.553 2.607-1.539-1.452-.698.71 2.25 2.135 3.25-3.304zm0 5l-.71-.696-2.552 2.607-1.539-1.452-.698.709 2.249 2.136 3.25-3.304zm0 5l-.71-.696-2.552 2.607-1.539-1.452-.698.709 2.249 2.136 3.25-3.304z\" fill=\"#fff\"/>\r\n                                            </svg><span>     </span>\r\n                                            <Link className='router-link' to='/todos/user/'>To-dos</Link>\r\n                                        </li>\r\n                                        <li>\r\n                                            <svg width=\"20\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\" fillRule=\"evenodd\" clipRule=\"evenodd\">\r\n                                                <path d=\"M20 23h2v1h-20v-1h2v-23h16v23zm-1-22h-14v22h14l-10-1.954v-18.015l10-2.031zm-7 11h-2v1h2v-1z\" fill=\"#fff\"/>\r\n                                            </svg><span>     </span>\r\n                                            <Link className='router-link' to='/logout'>Logout</Link>\r\n                                        </li>\r\n                                </ul>\r\n                            </div>\r\n                        </li>\r\n                    </ul>           \r\n                </nav>\r\n               <nav>\r\n               \r\n\r\n                    <ul className=\"todo-navbar\">                        \r\n                        <li>                        \r\n                            <Link className='router-link' to='/welcome/user/'>Home</Link>                        \r\n                        </li>\r\n                        <li>                        \r\n                            <Link className='router-link' to='/todos/user/'>To-dos</Link>                            \r\n                        </li>   \r\n                        {/*<li className='todo-navbar-li-last'>                        \r\n                            <Link className='router-link' to='/login'>Login</Link>                           \r\n                        </li>*/}\r\n                        <li className='todo-navbar-li-last'>                        \r\n                            <Link className='router-link' to='/logout'>Logout</Link>                            \r\n                        </li>\r\n                    </ul>                                    \r\n               </nav>\r\n              \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default HeaderComponent;","import axios from 'axios';\r\n\r\nclass HelloWorldService {\r\n\r\n    executeHelloWorldService(){\r\n        console.log('HelloWorldService :: executeHelloWorldService()...')\r\n        return axios.get('http://localhost:9090/todo-app/helloWorldSimple')\r\n    }\r\n\r\n    postNewHelloWorldMessage(message){\r\n\r\n        console.log('making post request...');\r\n\r\n        return axios.post('http://localhost:9090/todo-app/postHellowWorldSimple', {\r\n            helloWorldRequest: message\r\n          })\r\n    }\r\n\r\n    executeHelloWorldServicePathVariable(message){\r\n        return axios.get(`http://localhost:9090/todo-app/helloWorldSimplePathVar/${message}`);\r\n    }\r\n\r\n    returnError(message){\r\n        return axios.get('http://localhost:9090/todo-app/returnError');\r\n    }\r\n\r\n    \r\n    \r\n}\r\n\r\nexport default new HelloWorldService();","import React, { Component } from 'react';\r\nimport './todos.css';\r\n\r\nimport HeaderComponent from './outline-components/HeaderComponent.js';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport HelloWorldService from './api/todo/HelloWorldService.js';\r\n\r\n\r\nclass WelcomeComponent extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            welcomeMessage:''\r\n        }\r\n    }\r\n\r\n    //Call hello world service:\r\n    retrieveWelcomeMessage = () =>{\r\n        console.log('welcome message button clicked!');\r\n\r\n        HelloWorldService.executeHelloWorldService()\r\n        .then(response => this.handleSuccessfulResponse(response))\r\n    }\r\n\r\n    handleSuccessfulResponse = (response)=>{\r\n        this.setState({welcomeMessage:response.data.helloWorldResponse})\r\n    }\r\n\r\n\r\n    //invoke hello world service post:\r\n    postTestMessage = () =>{\r\n        console.log('postTestMessage button clicked!');\r\n\r\n        HelloWorldService.postNewHelloWorldMessage('testing').then(response =>console.log('post sample message response:',response))\r\n    }\r\n\r\n    //invoke hello world service get request with path variable:\r\n    getTestRequestWithPathVariableMessage = () =>{\r\n        console.log('request with path variable button clicked!');\r\n\r\n        HelloWorldService.executeHelloWorldServicePathVariable('pathVar123ABC').then(response =>console.log('get Request with path variable response:',response))\r\n    }\r\n\r\n    //invoke hello world service returnError:\r\n    returnError = () =>{\r\n        console.log('request to return error button clicked!');\r\n\r\n        HelloWorldService.returnError().then(response =>console.log('get Request return error response:',response)).catch(error => console.log(error.response.data.message))\r\n    }\r\n\r\n    render() {\r\n\r\n        //collect welcome message from api call:\r\n        const welcomeMessageAPI=this.state.welcomeMessage;\r\n\r\n        return (\r\n            <div>\r\n            \r\n                <HeaderComponent/>\r\n                \r\n                <div>\r\n                    <p>\r\n                        <br></br>\r\n                        Welcome to To-do App {this.props.match.params.name}!\r\n                    \r\n                    \r\n                        You can manage your todos <Link className='welcome-todo-link' to = '/todos'>here</Link> or choose 'to-dos' from the navigation bar\r\n                    </p>\r\n                \r\n                    <p>Click here to ge a customized welcome message.</p>\r\n                    \r\n                    <br></br>\r\n                    \r\n                    <button className='welcome-message-btn' \r\n                            onClick={this.retrieveWelcomeMessage}>Get Welcome Message</button>\r\n\r\n                    <h1>{welcomeMessageAPI}</h1>\r\n\r\n\r\n                    <button className='welcome-message-btn' \r\n                            onClick={this.postTestMessage}>make test post request</button>\r\n\r\n                    <br></br>\r\n\r\n                    <button className='welcome-message-btn' \r\n                            onClick={this.getTestRequestWithPathVariableMessage}>make test get request with path variable</button>\r\n\r\n\r\n                    <br></br>\r\n\r\n                    <button className='welcome-message-btn' \r\n                            onClick={this.returnError}>return error</button>\r\n                    \r\n                </div>\r\n            \r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WelcomeComponent;","import React, { Component } from 'react';\r\n\r\nclass ErrorComponent extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>Invalid address!</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorComponent;","import axios from 'axios';\r\n\r\nclass TodosService {\r\n\r\n    getAllTodos (userName){\r\n        return axios.get(`http://localhost:9090/todo-app/${userName}/todos`)\r\n    }\r\n\r\n    addNewTodo(newTodo){\r\n\r\n        console.log('adding new to-do item:',newTodo);\r\n\r\n        return axios.post('http://localhost:9090/todo-app/add-todo',{\r\n            \"description\":newTodo.description,\r\n            \"done\":newTodo.done,\r\n            \"targetDate\":newTodo.targetDate,\r\n            \"user\":newTodo.user\r\n        })\r\n    }\r\n\r\n    updateTodo(updatedTodo){\r\n        console.log('updating todo:',updatedTodo);\r\n\r\n        return axios.post('http://localhost:9090/todo-app/update-todo',{\r\n            \"id\":updatedTodo.id,\r\n            \"description\":updatedTodo.description,\r\n            \"done\":updatedTodo.done,\r\n            \"targetDate\":updatedTodo.targetDate,\r\n            \"user\":updatedTodo.user\r\n        })\r\n    }\r\n\r\n    deleteTodo(deleteTodo){\r\n        console.log('updating todo:',deleteTodo);\r\n        return axios.post(`http://localhost:9090/todo-app/delete-todo/${deleteTodo.id}`,{})\r\n    }\r\n}\r\n\r\nexport default new TodosService();","import React, { Component } from 'react';\r\n\r\n//import Material Table:\r\nimport MaterialTable from 'material-table';\r\n\r\nimport './todos.css';\r\nimport HeaderComponent from './outline-components/HeaderComponent.js';\r\n\r\nimport TodosService from './api/todo/TodosService.js';\r\n\r\nimport {BrowserRouter as Router,Link} from 'react-router-dom';\r\n\r\nimport AuthenticationService from './AuthenticationService.js';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport ExampleModal from './ExampleModal.js';\r\n\r\n\r\nclass ListTodosComponent extends Component {\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            todos: [],\r\n            userName:'',\r\n            message:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n        const userName = AuthenticationService.getLoggedInUserName();\r\n        console.log('component did mount! list todos component!!!!!>',userName);        \r\n\r\n        this.refreshTodos(userName);\r\n    }\r\n\r\n    refreshTodos = (userName) =>{\r\n        TodosService.getAllTodos(userName)\r\n        .then(response => this.handleAllTodosSuccess(response))\r\n        .catch(error => console.log(error))\r\n    }\r\n\r\n    handleAllTodosSuccess = (response) =>{\r\n\r\n        console.log('inside handleAllTodosSuccess()');\r\n\r\n        this.setState(Object.assign({},[],{todos:response.data}));\r\n\r\n        console.log('state is=',this.state);\r\n    }\r\n\r\n    addNewTodoItem = () =>{\r\n        console.log('adding new to-do item >');\r\n\r\n        \r\n\r\n        const userName = this.props.match.params.name\r\n\r\n        TodosService.addNewTodo({\r\n            description:'some description 1',\r\n            done:false,\r\n            targetDate:'2020-06-21',\r\n            user:userName\r\n        })\r\n        .then(data => console.log('successfully added new to-do!'))\r\n        .catch(error => console.log('error occured while adding new to-do :('))\r\n\r\n\r\n        this.props.history.push('/add-todo/user')\r\n    }\r\n\r\n    updateTodoItem = (rowData) =>{\r\n        console.log(`updating todo-item with user= ${rowData.user} and id=${rowData.id}`)\r\n\r\n        this.props.history.push(`/update-todo/user/${rowData.id}`)\r\n    }\r\n\r\n    deleteTodoItem = (rowData) =>{\r\n        console.log(`deleting todo-item with user= ${rowData.user} and id=${rowData.id}`)\r\n        const userName = AuthenticationService.getLoggedInUserName();\r\n       \r\n        TodosService.deleteTodo(rowData)\r\n            .then( response =>{\r\n                this.setState(Object.assign(this.state,{message:'delete is successful'}));        \r\n                this.refreshTodos(userName);\r\n            }                \r\n            );\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        \r\n        \r\n        const todosLocal = this.state.todos;\r\n        {/**const todosList = this.state.todos.map( (todo,index) =>{\r\n           \r\n            return <tr>                        \r\n                        <td>{todo.id}</td>\r\n                        <td>{todo.description}</td>\r\n                        <td>{todo.done.toString()}</td>\r\n                        <td>{todo.targetDate}</td>\r\n                    </tr>\r\n        })*/}\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div className='component-front'>\r\n                    <HeaderComponent/>\r\n                </div>               \r\n                \r\n                <div className='component-back'>   \r\n                 \r\n                    <div className='todos-table-container'>                                \r\n                    \r\n                        \r\n\r\n                        <MaterialTable title=\"Multiple Actions Preview\"\r\n                            columns={[\r\n                                { title: 'User Id', field: 'id' },\r\n                                { title: 'Description', field: 'description' },\r\n                                { title: 'Is Completed', field: 'done'},\r\n                                { title: 'Target Date', field: 'targetDate'\r\n                                },\r\n                            ]}\r\n                            data={todosLocal}      \r\n                            actions={[\r\n                                {\r\n                                    icon: 'delete',\r\n                                    tooltip: 'delete user',\r\n                                    onClick: (event, rowData) => {\r\n                                        console.log('rowData:',rowData)\r\n                                        this.deleteTodoItem(rowData);\r\n                                        \r\n                                    }\r\n                                },\r\n                                {\r\n                                    icon: 'edit',\r\n                                    tooltip: 'edit user',\r\n                                    onClick: (event, rowData) => {\r\n                                        console.log('rowData:',rowData)\r\n                                        this.updateTodoItem(rowData);\r\n                                    }\r\n                                }\r\n                            ]}\r\n                            />\r\n                        {/**<Alert severity=\"success\">This is a success alert — check it out!</Alert>\r\n                        <div className=\"btn-floating-container\">\r\n                            <button className=\"btn-floating btn btn-primary btn-medium\" onClick={this.addNewTodoItem}><span>+</span>\r\n                                <i className=\"fa fa-bullseye \" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                        </div>\r\n                        <ExampleModal something='tadaaaa'></ExampleModal>*/}\r\n                        \r\n                        \r\n                        {/**<div className='btn-floating-modal'>\r\n                            <button>aaa</button>\r\n                        </div>*/}\r\n                    </div>\r\n                \r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListTodosComponent;","import React, { Component } from 'react';\r\nimport '../todos.css';\r\n\r\nclass FooterComponent extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <footer>\r\n                    <span className='footer-text'>All rights reserved bla bla bla</span>\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterComponent;","import React, { Component } from 'react';\r\n\r\nimport AuthenticationService from './AuthenticationService.js'\r\nimport {Route,Redirect} from 'react-router-dom'; \r\n\r\nclass AuthenticatedRoute extends Component {\r\n\r\n    render() {\r\n\r\n        const path = this.props.path;\r\n        const component = this.props.component;\r\n\r\n        const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n\r\n        if(isUserLoggedIn){\r\n            return <Route path={path} component={component} />\r\n        }\r\n        else{\r\n            return <Redirect to='/login'/>\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default AuthenticatedRoute;","import React, { Component } from 'react';\r\n\r\nclass AddTodoComponent extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>add to-do component</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTodoComponent;","import React, { Component } from 'react';\r\nimport './formikStyle.css';\r\nimport { Route , withRouter, Link} from 'react-router-dom';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nclass FormikComponent extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n              lastName: '',\r\n              email: '',\r\n\r\n              username:'',\r\n              todoId:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        const {username,todoId} = this.props.parameterSent;\r\n\r\n        \r\n        console.log('username from props:',username)\r\n        console.log('todoId from props:',todoId)\r\n\r\n        this.setState({\r\n            username:username,\r\n            todoId:todoId\r\n        })\r\n    }\r\n\r\n    cancelReturnListTodo = () =>{\r\n\r\n        const username = this.state.username;\r\n        \r\n        this.props.history.push(`/todos/${username}`);\r\n    }\r\n\r\n    render(){\r\n\r\n        console.log('inside Formik Component:',this.state.username)\r\n\r\n        return(\r\n            <div className='formik-form-main'>\r\n                <Formik\r\n                        initialValues= {{\r\n                        firstName: this.state.firstName,\r\n                        lastName: this.state.lastName,\r\n                        email: this.state.email,\r\n                        }}\r\n                    validationSchema={ Yup.object({\r\n                        firstName: Yup.string()\r\n                        .max(15, 'Must be 15 characters or less')\r\n                        .required('Required'),\r\n                        lastName: Yup.string()\r\n                        .max(20, 'Must be 20 characters or less')\r\n                        .required('Required'),\r\n                        email: Yup.string()\r\n                        .email('Invalid email address')\r\n                        .required('Required'),\r\n                    })}\r\n              onSubmit={(values, { setSubmitting }) => {\r\n                setTimeout(() => {\r\n                \r\n                console.log('Formik form submitted with values=',values);\r\n\r\n                setSubmitting(false);\r\n                }, 400);\r\n            }}\r\n          >\r\n\r\n            {formik => (\r\n            <form onSubmit={formik.handleSubmit} className='formik-form-container'>\r\n                \r\n                <div className='formik-form-row'>\r\n                    <input\r\n                        id=\"firstName\"\r\n                        name=\"firstName\"\r\n                        type=\"text\"\r\n                        className='formik-form-input-text'\r\n                        {...formik.getFieldProps('firstName')}\r\n                        placeholder='First Name'\r\n                    />\r\n                    {formik.touched.firstName && formik.errors.firstName ? (\r\n                        <div>{formik.errors.firstName}</div>\r\n                    ) : null}\r\n                </div>\r\n                \r\n                <div className='formik-form-row'>\r\n                    <input\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        type=\"text\"\r\n                        className='formik-form-input-text'\r\n                        {...formik.getFieldProps('lastName')}\r\n                        placeholder='Last Name'\r\n                    />\r\n                    {formik.touched.lastName && formik.errors.lastName ? (\r\n                            <div>{formik.errors.lastName}</div>\r\n                        ) : null}\r\n                </div>\r\n                \r\n                <div className='formik-form-row'>\r\n                    <input\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        className='formik-form-input-text'\r\n                        {...formik.getFieldProps('email')}\r\n                        placeholder='Email'\r\n                    />\r\n                    {formik.touched.email && formik.errors.email ? (\r\n                        <div>{formik.errors.email}</div>\r\n                    ) : null}\r\n                </div>\r\n                \r\n                <div></div>\r\n                <div>\r\n                <Link className='router-link' to='/todos/user/'>To-dos</Link> \r\n                <button type='button' className='formik-form-submit-btn' onClick={this.cancelReturnListTodo}>Cancel</button>\r\n                    <span>   </span>\r\n                    <button type=\"submit\" className='formik-form-submit-btn'>Submit</button>\r\n                </div>\r\n                \r\n            </form>\r\n            )}\r\n            </Formik>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default FormikComponent;","import React, { Component } from 'react';\r\nimport TodoComponentForm from './TodoComponentForm';\r\nimport FormikComponent from './FormikComponent.js';\r\n\r\nclass TodoComponent extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        // Fetch the username from the URL as path variable:\r\n        const username = this.props.match.params.name;\r\n\r\n        // Fetch the todoId from the URL as path variable:\r\n        const todoId =  this.props.match.params.todoId;\r\n\r\n        console.log('username =',username);\r\n        console.log('todoId for update=',todoId);\r\n\r\n        \r\n\r\n        return (\r\n            <div>\r\n                <h1>todo component {username}</h1>\r\n                {/*<TodoComponentForm></TodoComponentForm>*/}\r\n                <FormikComponent parameterSent={{\r\n                    firstName:'Mohammad',\r\n                    lastName:'Ismail',\r\n                    email:'mismail6059@gmail.com',\r\n                    username:{username},\r\n                    todoId:{todoId}\r\n                }}></FormikComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoComponent;","import React, { Component } from 'react';\r\n\r\n//import custom components:\r\nimport LoginComponent from './LoginComponent.js';\r\nimport LogoutComponent from './LogoutComponent.js';\r\nimport WelcomeComponent from './WelcomeComponent.js';\r\nimport ErrorComponent from './ErrorComponent.js';\r\nimport ListTodosComponent from './ListTodosComponent.js';\r\n\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport FooterComponent from './outline-components/FooterComponent.js';\r\nimport './outline-components/bootstrap.css';\r\nimport './todos.css';\r\n\r\nimport AuthenticatedRoute from './AuthenticatedRoute.js';\r\nimport AddTodoComponent from './AddTodoComponent.js';\r\nimport TodoComponent from './TodoComponent.js';\r\n\r\nclass TodoApp extends Component {\r\n\r\n\r\n    submitLogin = () =>{\r\n        console.log('##### inside submitLogin()....');\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log('component did mount!')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='todo-app'>      \r\n                    \r\n                    <div className='todo-container'>\r\n                        <Router>\r\n\r\n                            <div className='todo-header'>\r\n                                \r\n                            </div>\r\n\r\n                            <div className='todo-cover'>\r\n                                <Switch>\r\n                                    <Route path='/' exact component={LoginComponent} />\r\n                                    <Route path='/login' component={LoginComponent} />\r\n                                    <AuthenticatedRoute path='/welcome/:name' component={WelcomeComponent} />\r\n                                    <AuthenticatedRoute path='/todos/:name' component={ListTodosComponent} />\r\n                                    <AuthenticatedRoute path='/add-todo/:name' component={TodoComponent} />\r\n                                    <AuthenticatedRoute path='/update-todo/:name/:todoId' component={TodoComponent} />\r\n                                    <AuthenticatedRoute path='/logout' component={LogoutComponent} />\r\n                                    <Route component={ErrorComponent} />\r\n                                </Switch> \r\n                            </div>\r\n                                \r\n                            <div className='todo-footer'>\r\n                                <FooterComponent />\r\n                            </div>                      \r\n                        </Router>    \r\n                \r\n                    </div>\r\n\r\n                \r\n                            \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default TodoApp;","import React from 'react';\nimport './App.css';\nimport TodoApp from './todo/TodoApp.js';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoApp/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}